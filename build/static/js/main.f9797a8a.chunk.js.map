{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","filter","type","onKeyUp","PersonForm","props","onSubmit","addInfo","value","valueName","onChange","nameChange","valueNumber","numberChange","Persons","key","name","number","onClick","click","baseUrl","axios","get","nameObj","post","id","window","confirm","delete","person","newObject","put","Notification","message","className","Error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","setShowAll","setFilter","success","setSuccessMessage","error","setErrorMessage","useEffect","personService","then","response","data","personsToShow","toLowerCase","includes","e","target","preventDefault","i","map","setTimeout","catch","alert","concat","length","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9797a8a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Filter = (filter) => {\r\n    \r\n    return (\r\n      <div>\r\n        filter shown with <input type=\"text\" onKeyUp={filter.filter}/>      \r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\n\r\n\r\n\r\n\r\nconst PersonForm = (props) => {\r\n    \r\n    return (\r\n        <form onSubmit={props.addInfo}>\r\n            <h2>add a new</h2>\r\n            <div>\r\n                name: <input value={props.valueName} onChange={props.nameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input value={props.valueNumber} onChange={props.numberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default PersonForm\r\n\r\n","import React from 'react'\r\n\r\n\r\nconst Persons = (props) => {\r\n    \r\n    return (\r\n        \r\n            <div key={props.name}>{props.name}  {props.number}<button onClick={props.click}>delete</button></div>\r\n    )\r\n  }\r\n\r\nexport default Persons","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = nameObj => {\r\n    return axios.post(baseUrl, nameObj)\r\n}\r\n\r\nconst remove = (id, name) => {\r\n    \r\n    if(window.confirm(`Delete ${name}?`)){\r\n        return axios.delete(`${baseUrl}/${id}`)\r\n    }\r\n    \r\n}\r\n\r\nconst update = (person , newObject) => {\r\n    if(window.confirm(`${person.name} is already added to the phonebook, replace the old number with the new one?`)){\r\n        return axios.put(`${baseUrl}/${person.id}`, newObject )\r\n    }\r\n}\r\nexport default { getAll, create, remove, update}","import React from 'react';\r\n\r\n\r\nconst Notification = ({message}) => {\r\n    \r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='success'>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Notification","import React from 'react';\r\n\r\n\r\nconst Error = ({message}) => {\r\n    \r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Error","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [filter, setFilter] = useState('')\n  const [success, setSuccessMessage] = useState(null)\n  const [error, setErrorMessage] = useState(null)\n\n  const hook = () => {\n    personService.getAll()\n      .then(response => { setPersons(response.data) })\n  }\n\n\n\n  useEffect(hook, [])\n\n  \n\n  const addInfo = (e) => {\n    e.preventDefault()\n\n    let nameObj = {\n      name: newName,\n      number: newNumber\n\n    }\n\n\n\n\n    for (let i = 0; i < (persons.length - 1); i++) {\n      if (persons[i].name === nameObj.name && persons[i].number !== nameObj.number) {\n        personService.update(persons[i], nameObj).then(response => {\n          setPersons(persons.map(person => person.id !== persons[i].id ? person : response.data))\n          setNewName('')\n          setNewNumber('')\n        }).then(() =>{\n          setSuccessMessage(`${persons[i].name} was updated!`)\n          setTimeout(() => {\n            setSuccessMessage(null)\n          }, 5000)\n        }).catch(() => {\n          setErrorMessage(`Information of ${persons[i].name} has already been removed from server`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n\n        })\n        break;\n\n      } else if (persons[i].name === nameObj.name && persons[i].number === nameObj.number) {\n        window.alert(`${newName} is already added to phonebook`)\n        setNewName('')\n        setNewNumber('')\n        break;\n      } else {\n        personService.create(nameObj)\n          .then(response => {\n            \n            setPersons(persons.concat(response.data))\n            setNewName('')\n            setNewNumber('')\n            setSuccessMessage(`${response.data.name} was created!`)\n            setTimeout(() => {\n              setSuccessMessage(null)\n            }, 5000)\n          })\n        break;\n      }\n    }\n\n\n\n\n\n\n  }\n\n  const handleNameChange = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const handleNumberChange = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const filtering = (e) => {\n    setShowAll(false)\n    setFilter(e.target.value)\n  }\n\n  \n  const personsToShow = showAll ? persons : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={success} />\n      <Error message={error} />\n      <Filter filter={filtering} />\n      <PersonForm addInfo={addInfo} valueNumber={newNumber} valueName={newName} nameChange={handleNameChange}\n        numberChange={handleNumberChange} />\n      <h2>Numbers</h2>\n      {personsToShow.map(person =>\n        <Persons key={person.name} name={person.name} number={person.number} click={() => {\n          personService.remove(person.id, person.name)\n            .then(setPersons(persons.filter(p => p.id !== person.id)))\n        }} />)}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '../src/index.css'\n\n\n\n\n\nReactDOM.render(\n<App />, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}